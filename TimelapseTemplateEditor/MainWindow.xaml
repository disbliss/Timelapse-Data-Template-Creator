<Window x:Class="TimelapseTemplateEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:toolkit="http://schemas.microsoft.com/wpf/2008/toolkit"
        xmlns:local="clr-namespace:TimelapseTemplateEditor"
        Name="OnlyWindow"
        Title="Timelapse Template Editor" Height="700" Width="1100" MinHeight="560" MinWidth="800">
    <Window.Resources>
        <ToolTip x:Key="DefaultValueToolTip">
            <TextBlock>An optional default data value that will be displayed to the analyst</TextBlock>
        </ToolTip>
        <ToolTip x:Key="LabelToolTip">
            <TextBlock>The text describing this field as shown in the user interface</TextBlock>
        </ToolTip>
        <ToolTip x:Key="DataLabelToolTip">
            <TextBlock>The text describing this field as written in the output file. Will be the same as the Label if its left empty.</TextBlock>
        </ToolTip>
        <ToolTip x:Key="TooltipToolTip">
            <TextBlock>The help text describing this field as shown in the user interface</TextBlock>
        </ToolTip>
        <ToolTip x:Key="WidthToolTip">
            <TextBlock>The width of the data entry field as shown in the user interface</TextBlock>
        </ToolTip>
        <ToolTip x:Key="CopyableToolTip">
            <TextBlock>Whether the data value from the former image will be copied to the current image if the user selects the ‘Copy’ button in Timelapse</TextBlock>
        </ToolTip>
        <ToolTip x:Key="VisibleToolTip">
            <TextBlock>Whether this item will be displayed in the user interface</TextBlock>
        </ToolTip>
        <ToolTip x:Key="TypeNoteToolTip">
            <TextBlock>The Note item accepts free-form text</TextBlock>
        </ToolTip>
        <ToolTip x:Key="TypeCounterToolTip">
            <TextBlock>The Count item provides a point and click interface for counting entities in an image</TextBlock>
        </ToolTip>
        <ToolTip x:Key="TypeFixedChoiceToolTip">
            <TextBlock>The Choice item provides a drop down menu of possible choices that can be entered. Edit the list to create these choices</TextBlock>
        </ToolTip>
        <ToolTip x:Key="TypeFileToolTip">
            <TextBlock>The File Item is filled in automatically by the system with the file name of the image</TextBlock>
        </ToolTip>
        <ToolTip x:Key="TypeFolderToolTip">
            <TextBlock>The Folder Item is filled in automatically by the system</TextBlock>
        </ToolTip>
        <ToolTip x:Key="TypeDateToolTip">
            <TextBlock>The Date item is filled in automatically by the system but will still be editable if changes are required</TextBlock>
        </ToolTip>
        <ToolTip x:Key="TypeTimeToolTip">
            <TextBlock>The Time item is filled in automatically by the system but will still be editable if changes are required</TextBlock>
        </ToolTip>
        <ToolTip x:Key="TypeImageQualityToolTip">
            <TextBlock>The Image Quality item is filled in automatically by the system</TextBlock>
        </ToolTip>
        <ToolTip x:Key="ListFixedChoiceToolTip">
            <TextBlock>A list of items displayed as a menu of choices. Type in new items; right click on an item to edit, move or delete it.</TextBlock>
        </ToolTip>
        <local:ListBoxDBOutputConverter x:Key="listConverter" />
        <local:CellTextBlockConverter x:Key="cellTBConverter" />

        <Style  x:Key="RadioButtonCodeBar" TargetType="RadioButton" BasedOn="{ StaticResource {x:Type ToggleButton}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border HorizontalAlignment="Right" VerticalAlignment="Center" x:Name="border" Padding="5,5,5,5" CornerRadius="5,5,5,5" Background="Beige" BorderBrush="LightBlue" BorderThickness="1,1,1,4" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="border" Value="LightBlue"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Margin" Value="0,0,2,0" />
        </Style>

        <Style  x:Key="LabelCodeBar" TargetType="Label">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Padding" Value="5,5,5,5"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Height" Value="30" />
        </Style>

        <Style  x:Key="TextBoxCodeBar" TargetType="TextBox" >
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0,4,5,5"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="LightBlue"/>
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="30" />
            <Setter Property="Focusable" Value="True" />
            <Setter Property="IsReadOnly" Value="False" />
        </Style>

        <Style  x:Key="ComboBoxCodeBar" TargetType="ComboBox" >
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Padding" Value="5,4,5,5"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="LightBlue"/>
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="25" />
            <Setter Property="Focusable" Value="True" />
            <Setter Property="IsReadOnly" Value="False" />
            <Setter Property="IsEditable" Value="False" />
        </Style>

        <Style  x:Key="StackPanelCodeBar" TargetType="StackPanel">
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="Margin" Value="0,0,10,0" />
            <Setter Property="Height" Value="40"/>
        </Style>
        <ContextMenu x:Key="ComboBoxListContextMenu">
            <MenuItem Header="Move Item Up" Name="MoveUpMenuItem" Tag="Up" Click="MoveMenuItem_Click">
                <MenuItem.Icon>
                    <Image Source="Images/arrow_Up_16xLG.png" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Move Item Down" Name="MoveDownMenuItem" Tag="Down" Click="MoveMenuItem_Click">
                <MenuItem.Icon>
                    <Image Source="Images/arrow_Down_16xLG.png" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Edit" Name="EditMenuItem" Click="EditMenuItem_Click" >
                <MenuItem.Icon>
                    <Image Source="Images/EditLabel_13239.png" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Delete" Name="DeleteMenuItem" Click="DeleteMenuItem_Click">
                <MenuItem.Icon>
                    <Image Source="Images/delete_16x.ico" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
    </Window.Resources>
    <Grid>
        <Grid.Resources>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="0,0,0,5" />
            </Style>
        </Grid.Resources>
        <DockPanel Name="mainUI">
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="_File" >
                    <MenuItem Name="NewFileMenuItem" Header="_New" Click="NewFileMenuItem_Click" ToolTip="Create a new data template file">
                        <MenuItem.Icon>
                            <Image Source="Images/NewFile_6276.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Name="OpenFileMenuItem" Header="_Open..." Click="OpenFileMenuItem_Click" ToolTip="Open an existing data template file">
                        <MenuItem.Icon>
                            <Image Source="Images/folder_Open_16xLG.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Name="ConvertFileMenuItem" Header="_Convert" Click="ConvertCodeTemplateFileMenuItem_Click" ToolTip="Convert an old code template file to a new data template file">
                        <MenuItem.Icon>
                            <Image Source="Images/ConvertFile.png" />
                        </MenuItem.Icon>
                    </MenuItem> 
                    <!-- <MenuItem Name="SaveAsFileMenuItem" Header="_Save As..." Click="SaveAsFileMenuItem_Click">
                    
                        <MenuItem.Icon>
                            <Image Source="Images/Save_6530.png" />
                        </MenuItem.Icon>
                    </MenuItem> -->
                    <Separator />
                    <MenuItem Name="ExitFileMenuItem" Header="_Exit" Click="ExitFileMenuItem_Click">
                        <MenuItem.Icon>
                            <Image Source="Images/Close_16XLG.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="_Help" >
                    <MenuItem Name="AboutMenuItem" Header="_About" Click="AboutMenuItem_Click" ToolTip="Information about this application version">
                    </MenuItem>
                </MenuItem>
            </Menu>
            <Grid DockPanel.Dock="Top" Margin="10,5,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Name="DisplayGrid" Width="1019*" />
                    <ColumnDefinition Name="EditButton" Width="165"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Name="EditScheme" Height="2*" MinHeight="225"/>
                    <RowDefinition Name="MenuPreview" Height="1*"  MinHeight="190"/>
                </Grid.RowDefinitions>

                <!-- If you change the visible rows or header names, please check UpdateCellColors() constants to ensure they match new conventions -->
                <toolkit:DataGrid PreviewKeyDown="TemplateDataGrid_PreviewKeyDown" Grid.Row="0" BeginningEdit="TemplateDataGrid_BeginningEdit" RowHeight="25" LayoutUpdated="TemplateDataGrid_LayoutUpdated" SelectionChanged="TemplateDataGrid_SelectionChanged" SelectionMode="Single" CanUserReorderColumns="False" Name="TemplateDataGrid" CanUserAddRows="False" CanUserDeleteRows="False" AutoGenerateColumns="False" CurrentCellChanged="TemplateDataGrid_CurrentCellChanged" ItemsSource="{Binding}" >
                    <!-- DataContext="{Binding}" -->
                    <toolkit:DataGrid.Resources>
                        <Style x:Key="DataGridCheckBoxStyle" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="Margin" Value="8,0,3,0" />
                        </Style>

                    </toolkit:DataGrid.Resources>
                    <toolkit:DataGrid.Columns>
                        <toolkit:DataGridTextColumn Header="Sort Order" Binding="{Binding Path=SortOrder, Converter={StaticResource cellTBConverter}}" CanUserSort="False" IsReadOnly="True"/>
                        <toolkit:DataGridTextColumn MinWidth="40" Header="Type" Binding="{Binding Path=Type, Converter={StaticResource cellTBConverter}}" CanUserSort="False">
                            <toolkit:DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Type}" Value="Note">
                                            <Setter Property="ToolTip" Value="{StaticResource TypeNoteToolTip}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="Counter">
                                            <Setter Property="ToolTip" Value="{StaticResource TypeCounterToolTip}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="FixedChoice">
                                            <Setter Property="ToolTip" Value="{StaticResource TypeFixedChoiceToolTip}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="File">
                                            <Setter Property="ToolTip" Value="{StaticResource TypeFileToolTip}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="Folder">
                                            <Setter Property="ToolTip" Value="{StaticResource TypeFolderToolTip}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="Date">
                                            <Setter Property="ToolTip" Value="{StaticResource TypeDateToolTip}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="Time">
                                            <Setter Property="ToolTip" Value="{StaticResource TypeTimeToolTip}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="ImageQuality">
                                            <Setter Property="ToolTip" Value="{StaticResource TypeImageQualityToolTip}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </toolkit:DataGridTextColumn.ElementStyle>
                        </toolkit:DataGridTextColumn>
                        <toolkit:DataGridTextColumn MinWidth="40"  Header="Default Value" Binding="{Binding Path=DefaultValue, Converter={StaticResource cellTBConverter}}" CanUserSort="False" >
                            <toolkit:DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="ToolTip" Value="{StaticResource DefaultValueToolTip}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Type}" Value="Counter">
                                            <Setter Property="TextAlignment" Value="Right"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </toolkit:DataGridTextColumn.ElementStyle>
                        </toolkit:DataGridTextColumn>
                        <toolkit:DataGridTextColumn MinWidth="40"  Header="Label" Binding="{Binding Path=Label, Converter={StaticResource cellTBConverter}}" CanUserSort="False" >
                            <toolkit:DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="ToolTip" Value="{StaticResource LabelToolTip}"/>
                                </Style>
                            </toolkit:DataGridTextColumn.ElementStyle>
                        </toolkit:DataGridTextColumn>
                        <toolkit:DataGridTextColumn MinWidth="40"  Header="Data Label" Binding="{Binding Path=DataLabel, Converter={StaticResource cellTBConverter}}" CanUserSort="False" >
                            <toolkit:DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="ToolTip" Value="{StaticResource DataLabelToolTip}"/>
                                </Style>
                            </toolkit:DataGridTextColumn.ElementStyle>
                        </toolkit:DataGridTextColumn>
                        <toolkit:DataGridTextColumn MinWidth="50"  Header="Tooltip" Binding="{Binding Path=Tooltip, Converter={StaticResource cellTBConverter}}" Width="*" CanUserSort="False" >
                            <toolkit:DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="ToolTip" Value="{StaticResource TooltipToolTip}"/>
                                </Style>
                            </toolkit:DataGridTextColumn.ElementStyle>
                        </toolkit:DataGridTextColumn>
                        <toolkit:DataGridTextColumn MinWidth="40"  Header="Width" Binding="{Binding Path=TXTBOXWIDTH, Converter={StaticResource cellTBConverter}}" CanUserSort="False" >
                            <toolkit:DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="ToolTip" Value="{StaticResource WidthToolTip}"/>
                                </Style>
                            </toolkit:DataGridTextColumn.ElementStyle>
                        </toolkit:DataGridTextColumn>
                        <toolkit:DataGridTemplateColumn  MinWidth="25" Width="Auto" Header="Copyable" SortMemberPath="Include" CanUserSort="False" >
                            <toolkit:DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox Name="CheckBox" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Path=Copyable, UpdateSourceTrigger=PropertyChanged}"/>
                                </DataTemplate>
                            </toolkit:DataGridTemplateColumn.CellTemplate>
                            <toolkit:DataGridTemplateColumn.CellStyle>
                                <Style TargetType="{x:Type toolkit:DataGridCell}">
                                    <Setter Property="ToolTip" Value="{StaticResource CopyableToolTip}"/>
                                </Style>
                            </toolkit:DataGridTemplateColumn.CellStyle>
                        </toolkit:DataGridTemplateColumn>
                        <toolkit:DataGridTemplateColumn MinWidth="25" Width="Auto" Header="Visible" SortMemberPath="Include" CanUserSort="False" >
                            <toolkit:DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox Name="CheckBox" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Path=Visible, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </toolkit:DataGridTemplateColumn.CellTemplate>
                            <toolkit:DataGridTemplateColumn.CellStyle>
                                <Style TargetType="{x:Type toolkit:DataGridCell}">
                                    <Setter Property="ToolTip" Value="{StaticResource VisibleToolTip}"/>
                                </Style>
                            </toolkit:DataGridTemplateColumn.CellStyle>
                        </toolkit:DataGridTemplateColumn>
                        <toolkit:DataGridTemplateColumn MinWidth="40" Width="80" Header="List" SortMemberPath="Include" CanUserSort="False" >
                            <toolkit:DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <ComboBox Name="comboBox" IsEditable="True" Tag="{Binding Path=SortOrder}" ItemsSource="{Binding Path=List, Mode=TwoWay, Converter={StaticResource listConverter}}" SelectionChanged="ComboBox_SelectionChanged" IsTextSearchEnabled="false" KeyDown="ComboBox_KeyDown" IsKeyboardFocusWithinChanged="comboBox_IsKeyboardFocusWithinChanged">
                                            <ComboBox.Style>
                                                <Style TargetType="{x:Type ComboBox}">
                                                    <Style.Triggers>
                                                        <!--Triggers for disabling lists for some types-->
                                                        <DataTrigger Binding="{Binding Type}" Value="File">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Type}" Value="Folder">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Type}" Value="Date">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Type}" Value="Time">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Type}" Value="Counter">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Type}" Value="Note">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Type}" Value="FixedChoice">
                                                            <Setter Property="ToolTip" Value="{StaticResource ListFixedChoiceToolTip}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ComboBox.Style>
                                            <ComboBox.ItemContainerStyle>
                                                <Style TargetType="ComboBoxItem">
                                                    <Setter Property="ContextMenu" Value="{StaticResource ComboBoxListContextMenu}"/>
                                                    <!--Menu is in window resources, couldn't get it to work otherwise -->
                                                    <Style.Triggers>
                                                        <!-- This doesn't seem to work. Comes from here: http://stackoverflow.com/questions/7572980-->
                                                        <DataTrigger Binding="{Binding}" Value="[NEW ITEM]">
                                                            <Setter Property="FontStyle" Value="Italic"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ComboBox.ItemContainerStyle>
                                        </ComboBox>
                                    </StackPanel>
                                </DataTemplate>
                            </toolkit:DataGridTemplateColumn.CellTemplate>
                        </toolkit:DataGridTemplateColumn>
                    </toolkit:DataGrid.Columns>
                </toolkit:DataGrid>

                <DockPanel Grid.Row="0" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="10,0">
                    <Label Content="Edit Data Items" DockPanel.Dock="Top" HorizontalAlignment="Center" FontSize="18" />
                    <Button Content="Move Item Up" DockPanel.Dock="Top" IsEnabled="False" HorizontalAlignment="Stretch" Name="MoveRowUpButton" Height="30" Tag="Up" Click="MoveRowButton_Click_Efficient"/>
                    <Button Content="Move Item Down" DockPanel.Dock="Top" IsEnabled="False" HorizontalAlignment="Stretch" Name="MoveRowDownButton"  Height="30" Tag="Down" Click="MoveRowButton_Click_Efficient"/>
                    <Border DockPanel.Dock="Top" BorderBrush="Black" BorderThickness="1" Margin="0,10,0,5" >
                        <DockPanel DockPanel.Dock="Top" >
                            <Label Content="Add" DockPanel.Dock="Top" HorizontalAlignment="Center" FontSize="14" />
                            <UniformGrid Margin="0,0,0,5" Rows="1" HorizontalAlignment="Stretch" DockPanel.Dock="Top">
                                <Button Content="Count"  Margin="5,0,2.5,0" Tag="Count" DockPanel.Dock="Top" HorizontalAlignment="Stretch" Height="30" IsEnabled="False" Click="AddRowButton_Click" Name="AddCountRowButton"/>
                                <Button Content="Choice" Margin="2.5,0" Tag="Choice" DockPanel.Dock="Top" HorizontalAlignment="Stretch" Height="30" IsEnabled="False" Click="AddRowButton_Click " Name="AddChoiceRowButton"/>
                                <Button Content="Note" Margin="2.5,0,5,0"  Tag="Note" DockPanel.Dock="Top" HorizontalAlignment="Stretch" Height="30" IsEnabled="False" Click="AddRowButton_Click" Name="AddNoteRowButton"/>
                            </UniformGrid>
                        </DockPanel>
                    </Border>
                    <Button Content="Remove Item" DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" Name="RemoveRowButton" IsEnabled="False" Height="30" VerticalAlignment="Bottom" Click="RemoveRowButton_Click" Margin="0"/>

                </DockPanel>

                <GridSplitter Grid.Row="1" Grid.ColumnSpan="2"
                 Height="2" Background="DarkGray" Margin="-10,10,0,0"
                 VerticalAlignment="Top" 
                 HorizontalAlignment="Stretch" />

                <DockPanel Grid.Row="1" Grid.ColumnSpan="2" Margin="0,7,0,0">
                    <TextBlock DockPanel.Dock="Top" Margin="0,10,10,0" FontWeight="Bold" Text="What the interface will (roughly) look like. Change the window size to see how things will rearrange themselves to fit"></TextBlock>
                    <Border BorderBrush="Gray" Background="White" BorderThickness="1" DockPanel.Dock="Top" Margin="0,0,10,10" >
                        <ScrollViewer>
                            <WrapPanel x:Name="wp" Margin="10,10,10,0" Orientation="Horizontal"/>
                        </ScrollViewer>
                    </Border>
                </DockPanel>
            </Grid>
        </DockPanel>
    </Grid>

</Window>
